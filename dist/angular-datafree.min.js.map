{"version":3,"sources":["webpack:///angular-datafree.min.js","webpack:///webpack/bootstrap fed52489ae461c4e9cb5","webpack:///./src/angular-datafree.ts","webpack:///external \"angular\"","webpack:///./src/factory.ts","webpack:///./src/client.ts","webpack:///./src/query.ts","webpack:///./src/utilities.ts","webpack:///./src/directive.ts","webpack:///./src/controller.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Object","defineProperty","value","angular","factory_1","directive_1","query_1","AngularDatafree","factory","$http","$q","default","constant","DFOrderDirection","DFDataResponseType","directive","DatafreeDirective","DatafreeRow","DatafreeEmpty","DatafreePager","DatafreeOrder","client_1","DFClientFactory","this","prototype","createClient","query","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","create","utilities_1","angular_1","DFClient","_super","_this","withCredentials","get","set","q","enumerable","configurable","headers","buildQueryParams","params","o","extend","$settings","$paramsMap","order","$order","length","$filter","k","Function","v","handleResponse","response","$dataResponseType","BODY","$total","parseInt","$countProperty","data","$dataProperty","dispatch","_i","_a","listeners","bind","sendRequest","config","url","$url","method","$method","$query","toLocaleLowerCase","send","defer","then","resolve","reason","reject","promise","page","$page","prev","next","first","last","defer_1","limit","Math","ceil","$limit","err","l","column","direction","$orderBy","$orderDirection","filter","Subscribeable","DFQuery","defaultSettings","paramsMap","settings","orderCallback","filterCallback","pageCallback","dataResponseType","countProperty","total","DFDefaultParamsMap","max","orderBy","orderDirection","t","type","prop","dataProperty","ASC","DESC","PROPERTY","subscribe","push","unsubscribe","f","controller_1","restrict","transclude","bindToController","template","controllerAs","scope","client","autoload","controller","DatafreeDirectiveController","require","link","e","attrs","$df","transFn","parent","watch","html","isArray","forEach","row","transEl","transScope","append","$on","attr","tE","tP","show","hide","remove","isObject","keys","children","numberLimit","showFirst","showPrev","showNext","showLast","firstLabel","prevLabel","nextLabel","lastLabel","templateUrl","DatafreePagerDirectiveController","element","ctrls","datafree","addClass","checkSort","on","removeClass","clientFactory","dataListener","$self","$onInit","Error","$postLink","$onDestroy","numbers","currentPage","maxPages","skipBack","skipForward","min","dataChange","median","floor","start","i"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAAUI,EAAQD,EAASH,GE5CjC,YACAW,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GACA,IAAAC,GAAAd,EAAA,GACAe,EAAAf,EAAA,GACAgB,EAAAhB,EAAA,GACAiB,EAAAjB,EAAA,IAEA,SAAAkB,GACAJ,EAAAV,OAAA,sBACAe,QAAA,yCAAAC,EAAAC,GACA,UAAAN,GAAAO,QAAAF,EAAAC,MAEAF,QAAA,qBACA,MAAAF,GAAAK,UAEAC,SAAA,mBAAAN,EAAAO,kBACAD,SAAA,qBAAAN,EAAAQ,oBACAC,UAAA,sBACA,UAAAV,GAAAW,oBAEAD,UAAA,yBACA,UAAAV,GAAAY,cAEAF,UAAA,2BACA,UAAAV,GAAAa,gBAEAH,UAAA,2BACA,UAAAV,GAAAc,gBAEAJ,UAAA,2BACA,UAAAV,GAAAe,iBAEA5B,EAAAe,kBAAAf,EAAAe,sBFmDM,SAAUd,EAAQD,GGnFxBC,EAAAD,QAAAW,SHyFM,SAAUV,EAAQD,EAASH,GIzFjC,YACAW,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GACA,IAAAmB,GAAAhC,EAAA,GACAiC,EAAA,WACA,QAAAA,GAAAb,EAAAC,GACAa,KAAAd,QACAc,KAAAb,KAKA,MAHAY,GAAAE,UAAAC,aAAA,SAAAC,GACA,UAAAL,GAAAV,QAAAY,KAAAd,MAAAc,KAAAb,GAAAgB,IAEAJ,IAEA9B,GAAAmB,QAAAW,GJgGM,SAAU7B,EAAQD,EAASH,GK7GjC,YACA,IAAAsC,GAAAJ,WAAAI,WAAA,WACA,GAAAC,GAAA5B,OAAA6B,iBACAC,uBAAAC,QAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,OAAAlC,KAAAkC,KAAAC,eAAAnC,KAAAiC,EAAAjC,GAAAkC,EAAAlC,IACA,iBAAAiC,EAAAC,GAEA,QAAAE,KAAAZ,KAAAa,YAAAJ,EADAJ,EAAAI,EAAAC,GAEAD,EAAAR,UAAA,OAAAS,EAAAjC,OAAAqC,OAAAJ,IAAAE,EAAAX,UAAAS,EAAAT,UAAA,GAAAW,OAGAnC,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GACA,IAAAI,GAAAjB,EAAA,GACAiD,EAAAjD,EAAA,GACAkD,EAAAlD,EAAA,GACAmD,EAAA,SAAAC,GAEA,QAAAD,GAAA/B,EAAAC,EAAAgB,GACA,GAAAgB,GAAAD,EAAA7C,KAAA2B,WAKA,OAJAmB,GAAAjC,QACAiC,EAAAhC,KACAgC,EAAAhB,QACAgB,EAAAC,iBAAA,EACAD,EAkJA,MAzJAf,GAAAa,EAAAC,GASAzC,OAAAC,eAAAuC,EAAAhB,UAAA,UACAoB,IAAA,WACA,MAAArB,MAAAG,OAEAmB,IAAA,SAAAC,GACAvB,KAAAG,MAAAoB,GAEAC,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAAuC,EAAAhB,UAAA,YACAoB,IAAA,WACA,MAAArB,MAAA0B,SAEAJ,IAAA,SAAAI,GACA1B,KAAA0B,WAEAF,YAAA,EACAC,cAAA,IAEAR,EAAAhB,UAAA0B,iBAAA,SAAAC,OACA,KAAAA,SACA,IAAAC,MACArD,EAAAwC,EAAAc,UAAA9B,KAAAG,MAAA4B,UAAAH,EAEA,IAAA5B,KAAAG,MAAA4B,UAAApB,eAAA,kBACAX,KAAAG,MAAA6B,WAAArB,eAAA,YACA,GAAAsB,GAAAjC,KAAAG,MAAA+B,MACAL,GAAA7B,KAAAG,MAAA6B,WAAA,SAAAC,EAAA,GACAA,EAAAE,OAAA,IACAN,EAAA7B,KAAAG,MAAA6B,WAAA,gBAAAC,EAAA,IAIAjC,KAAAG,MAAA4B,UAAApB,eAAA,mBACAX,KAAAG,MAAA6B,WAAArB,eAAA,YACAkB,EAAA7B,KAAAG,MAAA6B,WAAA,QAAAhC,KAAAG,MAAAiC,QAEA,QAAAC,KAAA7D,GAEA,KAAAA,EAAA6D,YAAAC,WAAA,WAAAD,GAAA,kBAAAA,GAAA,UAAAA,GAAA,CAGA,GAAAE,GAAA/D,EAAA6D,EACArC,MAAAG,MAAA6B,WAAArB,eAAA0B,GACAR,EAAA7B,KAAAG,MAAA6B,WAAAK,IAAAE,EAGAV,EAAAQ,GAAAE,EAGA,MAAAV,IAEAZ,EAAAhB,UAAAuC,eAAA,SAAAC,GACA,MAAAzC,MAAAG,MAAAuC,oBAAA3D,EAAAQ,mBAAAoD,MACA3C,KAAAG,MAAAyC,OAAAC,SAAAJ,EAAAf,QAAA1B,KAAAG,MAAA2C,gBAAA,IACAL,EAAAM,OAEA/C,KAAAG,MAAAyC,OAAAC,SAAAJ,EAAAM,KAAA/C,KAAAG,MAAA2C,gBAAA,IACA,OAAA9C,KAAAG,MAAA6C,cACAP,EAAAM,KAAA/C,KAAAG,MAAA6C,eAAAP,EAAAM,OAEA9B,EAAAhB,UAAAgD,SAAA,SAAAF,GACA,OAAAG,GAAA,EAAAC,EAAAnD,KAAAoD,UAAAF,EAAAC,EAAAhB,OAAAe,IAAA,CACAC,EAAAD,GACAG,KAAArD,KAAA+C,OAGA9B,EAAAhB,UAAAqD,YAAA,SAAA1B,GACA,GAAA2B,IACAC,IAAAxD,KAAAG,MAAAsD,KACAC,OAAA1D,KAAAG,MAAAwD,QACAvC,gBAAApB,KAAAoB,gBACAM,QAAA1B,KAAA0B,QAQA,OANA,OAAA1B,KAAA4D,OAAAD,QAAAE,oBACAN,EAAA3B,OAAA5B,KAAA2B,iBAAAC,GAGA2B,EAAAR,KAAA/C,KAAA2B,iBAAAC,GAEA5B,KAAAd,MAAAqE,IAEAtC,EAAAhB,UAAA6D,KAAA,SAAAlC,GACA,GAAAT,GAAAnB,KACA+D,EAAA/D,KAAAb,GAAA4E,OAQA,OAPA/D,MAAAsD,YAAA1B,GAAAoC,KAAA,SAAAvB,GACA,GAAAM,GAAA5B,EAAAqB,eAAAC,EACAsB,GAAAE,QAAAlB,GACA5B,EAAA8B,SAAAF,IACA,SAAAmB,GACAH,EAAAI,OAAAD,KAEAH,EAAAK,SAEAnD,EAAAhB,UAAAoE,KAAA,SAAA7F,GAEA,MADAwB,MAAAG,MAAAmE,MAAA9F,EACAwB,KAAA8D,QAEA7C,EAAAhB,UAAAsE,KAAA,WACA,MAAAvE,MAAAqE,KAAArE,KAAAG,MAAAmE,MAAA,IAEArD,EAAAhB,UAAAuE,KAAA,WACA,MAAAxE,MAAAqE,KAAArE,KAAAG,MAAAmE,MAAA,IAEArD,EAAAhB,UAAAwE,MAAA,WACA,MAAAzE,MAAAqE,KAAA,IAEApD,EAAAhB,UAAAyE,KAAA,WACA,GAAAvD,GAAAnB,IACA,UAAAA,KAAAG,MAAAyC,QAAA,GAAA5C,KAAAG,MAAAyC,OAAA,CACA,GAAA+B,GAAA3E,KAAAb,GAAA4E,OAcA,OAZA/D,MAAAsD,aAAAe,KAAA,EAAAO,MAAA,IAAAZ,KAAA,SAAAvB,GACAtB,EAAAqB,eAAAC,EAEA,IAAA4B,GAAAQ,KAAAC,KAAA3D,EAAAhB,MAAAyC,OAAAzB,EAAAhB,MAAA4E,QAAA,CACA5D,GAAAkD,QAAAL,KAAA,SAAAjB,GACA4B,EAAAV,QAAAlB,IACA,SAAAiC,GACAL,EAAAR,OAAAa,MAEA,SAAAA,GACAL,EAAAR,OAAAa,KAEAL,EAAAP,QAGA,GAAAC,GAAAQ,KAAAC,KAAA9E,KAAAG,MAAAyC,OAAA5C,KAAAG,MAAA4E,QAAA,CACA,OAAA/E,MAAAqE,SAEApD,EAAAhB,UAAA2E,MAAA,SAAAK,GAEA,MADAjF,MAAAG,MAAA4E,OAAAE,EACAjF,KAAAqE,KAAA,IAEApD,EAAAhB,UAAAgC,MAAA,SAAAiD,EAAAC,GAGA,MAFAnF,MAAAG,MAAAiF,SAAAF,EACAlF,KAAAG,MAAAkF,gBAAAF,EACAnF,KAAA8D,QAEA7C,EAAAhB,UAAAqF,OAAA,SAAA/D,GAEA,MADAvB,MAAAG,MAAAiC,QAAAb,EACAvB,KAAAyE,SAEAxD,GACAF,EAAAwE,cACAtH,GAAAmB,QAAA6B,GLoHM,SAAU/C,EAAQD,EAASH,GM/RjC,YAIAW,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GACA,IAAAqC,GAAAlD,EAAA,GACA0H,EAAA,WACA,QAAAA,GAAAhC,EAAAE,EAAA+B,EAAAC,OACA,KAAAhC,MAAA,OACA1D,KAAAwD,MACAxD,KAAA0D,SACA1D,KAAA2F,UACAtB,KAAA,EACAO,MAAA,GACAgB,cAAA,SAAA3D,EAAAkD,GACA,OACAlD,EACAkD,IAGAU,eAAA,SAAAP,GACA,MAAAA,IAEAQ,aAAA,SAAAzB,GACA,MAAAA,KAGArE,KAAA+F,iBAAAxG,EAAAoD,KACA3C,KAAAgG,cAAA,UACAhG,KAAAiG,MAAA,EACA,MAAAR,IACAzF,KAAA2F,SAAA3E,EAAAc,UAAA9B,KAAA2F,SAAAF,IAEAzF,KAAA0F,YACA,MAAA1F,KAAA0F,YACA1F,KAAA0F,UAAA,GAAAQ,IAgIA,MA7HAzH,QAAAC,eAAA8G,EAAAvF,UAAA,aACAoB,IAAA,WACA,MAAArB,MAAA2F,UAEAnE,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,QACAoB,IAAA,WACA,MAAArB,MAAAwD,KAEAhC,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,WACAoB,IAAA,WACA,MAAArB,MAAA0D,QAEAlC,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,SACAoB,IAAA,WACA,MAAArB,MAAA2F,SAAAG,aAAAzH,KAAA2B,UAAA2F,SAAAtB,KAAArE,KAAA2F,SAAAf,QAEAtD,IAAA,SAAA9C,GACAwB,KAAA2F,SAAAtB,KAAAQ,KAAAsB,IAAA3H,EAAA,IAEAgD,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,UACAoB,IAAA,WACA,MAAArB,MAAA2F,SAAAf,OAEAtD,IAAA,SAAA2D,GACAjF,KAAA2F,SAAAf,MAAAC,KAAAsB,IAAAlB,EAAA,IAEAzD,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,UACAoB,IAAA,WACA,MAAArB,MAAA2F,SAAAC,cAAAvH,KAAA2B,UAAAoF,SAAApF,KAAAqF,kBAEA7D,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,YACAoB,IAAA,WACA,MAAArB,MAAA2F,SAAAS,SAEA9E,IAAA,SAAA4D,GACAlF,KAAA2F,SAAAS,QAAAlB,GAEA1D,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,mBACAoB,IAAA,WACA,MAAArB,MAAA2F,SAAAU,gBAEA/E,IAAA,SAAA6D,GACAnF,KAAA2F,SAAAU,eAAAlB,GAEA3D,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,WACAoB,IAAA,WACA,MAAArB,MAAA2F,SAAAE,eAAAxH,KAAA2B,UAAA2F,SAAAL,SAEAhE,IAAA,SAAAC,GACAvB,KAAA2F,SAAAL,OAAA/D,GAEAC,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,UACAoB,IAAA,WACA,MAAArB,MAAAiG,OAEA3E,IAAA,SAAAgF,GACAtG,KAAAiG,MAAAK,GAEA9E,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,cACAoB,IAAA,WACA,MAAArB,MAAA0F,WAEAlE,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,qBACAoB,IAAA,WACA,MAAArB,MAAA+F,kBAEAzE,IAAA,SAAAiF,GACAvG,KAAA+F,iBAAAQ,GAEA/E,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,kBACAoB,IAAA,WACA,MAAArB,MAAAgG,eAEA1E,IAAA,SAAAkF,GACAxG,KAAAgG,cAAAQ,GAEAhF,YAAA,EACAC,cAAA,IAEAhD,OAAAC,eAAA8G,EAAAvF,UAAA,iBACAoB,IAAA,WACA,MAAArB,MAAAyG,cAEAnF,IAAA,SAAAkF,GACAxG,KAAAyG,aAAAD,GAEAhF,YAAA,EACAC,cAAA,IAEA+D,IAEAvH,GAAAmB,QAAAoG,CACA,IAAAU,GAAA,WACA,QAAAA,KACAlG,KAAAqE,KAAA,OACArE,KAAA4E,MAAA,QACA5E,KAAAoG,QAAA,WACApG,KAAAqG,eAAA,kBACArG,KAAAsF,OAAA,IAEA,MAAAY,KAEAjI,GAAAiI,oBACA,IAAA5G,GAAA,WACA,QAAAA,MAIA,MAFAA,GAAAoH,IAAA,MACApH,EAAAqH,KAAA,OACArH,IAEArB,GAAAqB,kBACA,IAAAC,GAAA,WACA,QAAAA,MAIA,MAFAA,GAAAqH,SAAA,WACArH,EAAAoD,KAAA,OACApD,IAEAtB,GAAAsB,sBNsSM,SAAUrB,EAAQD,GOtexB,YAIAQ,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GACA,IAAA4G,GAAA,WACA,QAAAA,KACAvF,KAAAoD,aAUA,MARAmC,GAAAtF,UAAA4G,UAAA,SAAA5B,GACAjF,KAAAoD,UAAA0D,KAAA7B,IAEAM,EAAAtF,UAAA8G,YAAA,SAAA9B,GACAjF,KAAAoD,UAAApD,KAAAoD,UAAAkC,OAAA,SAAA0B,GACA,MAAAA,KAAA/B,KAGAM,IAEAtH,GAAAsH,iBP6eM,SAAUrH,EAAQD,EAASH,GQhgBjC,YACAW,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GAIA,IAAAqC,GAAAlD,EAAA,GACAmJ,EAAAnJ,EAAA,GACAiB,EAAAjB,EAAA,GACA2B,EAAA,WACA,QAAAA,KACAO,KAAAkH,SAAA,IACAlH,KAAAmH,YAAA,EACAnH,KAAAoH,kBAAA,EACApH,KAAAqH,SAAA,kCACArH,KAAAsH,aAAA,MACAtH,KAAAuH,OACApH,MAAA,KACAqH,OAAA,KACAC,SAAA,MAEAzH,KAAA0H,YAAA,kBAAAT,EAAAU,6BAEA,MAAAlI,KAEAxB,GAAAwB,mBACA,IAAAC,GAAA,WACA,QAAAA,KACAM,KAAAkH,SAAA,MACAlH,KAAAmH,WAAA,UACAnH,KAAA4H,QAAA,aACA5H,KAAA6H,KAAA,SAAAN,EAAAO,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAI,SACAC,EAAA,SAAApF,GACAmF,EAAAE,KAAA,KACApH,EAAAqH,QAAAtF,UACAuF,QAAA,SAAAC,GACAN,EAAA,SAAAO,EAAAC,GACAA,EAAA1F,KAAAwF,EACAL,EAAAQ,OAAAF,OAIAR,GAAAnB,UAAAsB,GACAZ,EAAAoB,IAAA,sBACAX,EAAAjB,YAAAoB,MAIA,MAAAzI,KAEAzB,GAAAyB,aACA,IAAAC,GAAA,WACA,QAAAA,KACAK,KAAAkH,SAAA,MACAlH,KAAAmH,WAAA,UACAnH,KAAA4H,QAAA,aACA5H,KAAA6H,KAAA,SAAAN,EAAAO,EAAAc,EAAAZ,EAAAC,GACA,GAAAY,GACAC,EACAC,EAAA,SAAAjB,GACA,MAAAA,IACA,MAAAA,EAAAiB,KACAjB,EAAAiB,OAGAD,EAAAJ,OAAAZ,KAIAkB,EAAA,SAAAlB,GACA,MAAAA,IACA,MAAAA,EAAAkB,KACAlB,EAAAkB,OAGAlB,EAAAmB,WAIAd,EAAA,SAAApF,GACA,MAAA8F,IACA,MAAA9F,IACA/B,EAAAqH,QAAAtF,IAAA,IAAAA,EAAAZ,SACAnB,EAAAqH,QAAAtF,IAAA/B,EAAAkI,SAAAnG,IAAAtE,OAAA0K,KAAApG,GAAAZ,OAAA,GACA4G,EAAAF,GAGAG,EAAAH,IAIAb,GAAAnB,UAAAsB,GACAZ,EAAAoB,IAAA,sBACAX,EAAAjB,YAAAoB,KAEAF,EAAA,SAAAO,EAAAC,GACAI,EAAAL,EACAM,EAAAhB,EAAAI,SACAM,EAAAE,OAAAZ,EAAAsB,YACAtB,EAAAI,SAAAQ,OAAAF,MAIA,MAAA7I,KAEA1B,GAAA0B,eACA,IAAAC,GAAA,WACA,QAAAA,KACAI,KAAAkH,SAAA,IACAlH,KAAA4H,SAAA,8BACA5H,KAAAuH,OACA8B,YAAA,KACAC,UAAA,KACAC,SAAA,KACAC,SAAA,KACAC,SAAA,KACAC,WAAA,KACAC,UAAA,KACAC,UAAA,KACAC,UAAA,MAEA7J,KAAA8J,YAAA,sBACA9J,KAAAoH,kBAAA,EACApH,KAAAsH,aAAA,SACAtH,KAAA0H,WAAAT,EAAA8C,iCACA/J,KAAA6H,KAAA,SAAAN,EAAAyC,EAAAjC,EAAAkC,GACAA,EAAA,GACAC,SAAAD,EAAA,IAGA,MAAArK,KAEA3B,GAAA2B,eACA,IAAAC,GAAA,WACA,QAAAA,KACAG,KAAAkH,SAAA,IACAlH,KAAA4H,QAAA,aACA5H,KAAAuH,OACArC,OAAA,kBAEAlF,KAAA6H,KAAA,SAAAN,EAAAO,EAAAC,EAAAC,GACAT,EAAApC,UAAA,KACA2C,EAAAqC,SAAA,YACA,IAAAC,GAAA,WACA,GAAAlF,GAAAlF,KAAAwH,OAAA5D,OAAAwB,SACAD,EAAAnF,KAAAwH,OAAA5D,OAAAyB,eACAkC,GAAArC,YACA4C,EAAAqC,SAAAhF,GAAApG,EAAAO,iBAAAqH,KAAA,0BACAY,EAAApC,aAGA6C,GAAAnB,UAAAuD,GACA7C,EAAAoB,IAAA,sBACAX,EAAAjB,YAAAqD,KAEAtC,EAAAuC,GAAA,mBACArJ,EAAAsH,QAAAR,EAAAI,SAAAkB,WAAA,SAAAtB,GACA9G,EAAAgJ,QAAAlC,GACAwC,YAAA,aAAAA,YAAA,eAEA,IAAAnF,GAAAoC,EAAApC,SACAoC,GAAArC,QAAA8C,EAAAR,OAAA5D,OAAAwB,UAAA,MAAAD,IACAA,KAAApG,EAAAO,iBAAAoH,IAAA,cAEAsB,EAAA/F,MAAAsF,EAAArC,OAAAC,MAIA,MAAAtF,KAEA5B,GAAA4B,iBRugBM,SAAU3B,EAAQD,EAASH,GSjrBjC,YAIA,IAAAsC,GAAAJ,WAAAI,WAAA,WACA,GAAAC,GAAA5B,OAAA6B,iBACAC,uBAAAC,QAAA,SAAAC,EAAAC,GAAAD,EAAAF,UAAAG,IACA,SAAAD,EAAAC,GAAA,OAAAlC,KAAAkC,KAAAC,eAAAnC,KAAAiC,EAAAjC,GAAAkC,EAAAlC,IACA,iBAAAiC,EAAAC,GAEA,QAAAE,KAAAZ,KAAAa,YAAAJ,EADAJ,EAAAI,EAAAC,GAEAD,EAAAR,UAAA,OAAAS,EAAAjC,OAAAqC,OAAAJ,IAAAE,EAAAX,UAAAS,EAAAT,UAAA,GAAAW,OAGAnC,QAAAC,eAAAT,EAAA,cAAAU,OAAA,GACA,IAAAoC,GAAAjD,EAAA,GACA6J,EAAA,SAAAzG,GAEA,QAAAyG,GAAA4C,GACA,GAAApJ,GAAAD,EAAA7C,KAAA2B,WAOA,OANAmB,GAAAoJ,gBACApJ,EAAAsG,UAAA,EACAtG,EAAAqJ,aAAA,SAAAzH,GACA5B,EAAA4B,OACA5B,EAAA8B,SAAAF,IACAM,KAAAlC,GACAA,EAwDA,MAjEAf,GAAAuH,EAAAzG,GAWAyG,EAAA1H,UAAAgD,SAAA,SAAAF,GACA,GAAA0H,GAAAzK,IACAA,MAAAoD,UAAAkF,QAAA,SAAArD,GACAA,EAAA5B,KAAAoH,EAAA1H,QAGAtE,OAAAC,eAAAiJ,EAAA1H,UAAA,SACAoB,IAAA,WACA,MAAArB,MAAA+C,MAEAvB,YAAA,EACAC,cAAA,IAEAkG,EAAA1H,UAAAsE,KAAA,WACA,MAAAvE,MAAAwH,OAAAjD,QAEAoD,EAAA1H,UAAAuE,KAAA,WACA,MAAAxE,MAAAwH,OAAAhD,QAEAmD,EAAA1H,UAAAwE,MAAA,WACA,MAAAzE,MAAAwH,OAAA/C,SAEAkD,EAAA1H,UAAAyE,KAAA,WACA,MAAA1E,MAAAwH,OAAA9C,QAEAiD,EAAA1H,UAAAoE,KAAA,SAAA7F,GACA,MAAAwB,MAAAwH,OAAAnD,KAAA7F,IAEAmJ,EAAA1H,UAAAgC,MAAA,SAAAiD,EAAAC,GACA,MAAAnF,MAAAwH,OAAAvF,MAAAiD,EAAAC,IAEAwC,EAAA1H,UAAA2E,MAAA,SAAAK,GACA,MAAAjF,MAAAwH,OAAA5C,MAAAK,IAEA0C,EAAA1H,UAAAqF,OAAA,SAAA/D,GACA,MAAAvB,MAAAwH,OAAAlC,OAAA/D,IAEAoG,EAAA1H,UAAAyK,QAAA,WACA,SAAA1K,KAAAG,OAAA,MAAAH,KAAAwH,OACAxH,KAAAwH,OAAAxH,KAAAuK,cAAArK,aAAAF,KAAAG,WAEA,UAAAH,KAAAG,OAAA,MAAAH,KAAAwH,OACA,SAAAmD,OAAA,sEAEA3K,MAAAwH,OAAAX,UAAA7G,KAAAwK,eAEA7C,EAAA1H,UAAA2K,UAAA,WACA,GAAA5K,KAAAyH,UACAzH,KAAAwH,OAAA1D,QAGA6D,EAAA1H,UAAA4K,WAAA,WACA7K,KAAAwH,OAAAT,YAAA/G,KAAAwK,eAEA7C,GACA5G,EAAAwE,cACAtH,GAAA0J,6BACA,IAAAoC,GAAA,WACA,QAAAA,KACA/J,KAAAqJ,YAAA,EACArJ,KAAA0J,WAAA,QACA1J,KAAA6J,UAAA,OACA7J,KAAA2J,UAAA,OACA3J,KAAA4J,UAAA,OACA5J,KAAAsJ,WAAA,EACAtJ,KAAAuJ,UAAA,EACAvJ,KAAAwJ,UAAA,EACAxJ,KAAAyJ,UAAA,EACAzJ,KAAA8K,WACA9K,KAAA+K,YAAA,EACA/K,KAAA4E,MAAA,GACA5E,KAAAgL,SAAA,EACAhL,KAAAiG,MAAA,EAqDA,MAnDA8D,GAAA9J,UAAAsE,KAAA,WACAvE,KAAA+K,YAAA,GACA/K,KAAAkK,SAAA3F,QAGAwF,EAAA9J,UAAAuE,KAAA,WACAxE,KAAA+K,YAAA/K,KAAAgL,UACAhL,KAAAkK,SAAA1F,QAGAuF,EAAA9J,UAAAwE,MAAA,WACAzE,KAAAkK,SAAAzF,SAEAsF,EAAA9J,UAAAyE,KAAA,WACA1E,KAAAkK,SAAAxF,QAEAqF,EAAA9J,UAAAoE,KAAA,SAAA7F,GACA,GAAA6F,GAAA7F,EAAA,CACA6F,IAAA,GAAAA,EAAArE,KAAAgL,UACAhL,KAAAkK,SAAA7F,SAGA0F,EAAA9J,UAAAgL,SAAA,WACAjL,KAAAqE,KAAAQ,KAAAsB,IAAA,EAAAnG,KAAA+K,YAAA/K,KAAAqJ,eAEAU,EAAA9J,UAAAiL,YAAA,WACAlL,KAAAqE,KAAAQ,KAAAsG,IAAAnL,KAAAgL,SAAAhL,KAAA+K,YAAA/K,KAAAqJ,eAEAU,EAAA9J,UAAAyK,QAAA,WACA1K,KAAAoL,WAAA,WACApL,KAAA+K,YAAA/K,KAAAkK,SAAA1C,OAAA5D,OAAAU,MAAA,EACAtE,KAAA4E,MAAA5E,KAAAkK,SAAA1C,OAAA5D,OAAAmB,OACA/E,KAAAiG,MAAAjG,KAAAkK,SAAA1C,OAAA5D,OAAAhB,OACA5C,KAAAgL,SAAAnG,KAAAC,KAAA9E,KAAAiG,MAAAjG,KAAA4E,MACA,IAAAyG,GAAAxG,KAAAyG,MAAAtL,KAAAqJ,YAAA,EAEA,IADArJ,KAAA8K,WACAO,EAAA,EAGA,OAFAE,GAAA1G,KAAAsB,IAAA,EAAAtB,KAAAsG,IAAAnL,KAAAgL,SAAAhL,KAAAqJ,YAAA,EAAArJ,KAAA+K,YAAAM,IACAlF,EAAAtB,KAAAsG,IAAAI,EAAAvL,KAAAqJ,YAAArJ,KAAAgL,SAAA,GACAQ,EAAAD,EAAAC,EAAArF,EAAAqF,IACAxL,KAAA8K,QAAAhE,KAAA0E,IAGAnI,KAAArD,OAEA+J,EAAA9J,UAAA2K,UAAA,WACA5K,KAAAkK,SAAArD,UAAA7G,KAAAoL,aAEArB,EAAA9J,UAAA4K,WAAA,WACA7K,KAAAkK,SAAAnD,YAAA/G,KAAAoL,aAEArB,IAEA9L,GAAA8L","file":"angular-datafree.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar angular = __webpack_require__(1);\n\tvar factory_1 = __webpack_require__(2);\n\tvar directive_1 = __webpack_require__(6);\n\tvar query_1 = __webpack_require__(4);\n\tvar AngularDatafree;\n\t(function (AngularDatafree) {\n\t    angular.module('ae.datafree', ['ng'])\n\t        .factory('DFClientFactory', ['$http', '$q', function ($http, $q) {\n\t            return new factory_1.default($http, $q);\n\t        }])\n\t        .factory('DFQuery', function () {\n\t        return query_1.default;\n\t    })\n\t        .constant('DFOrderDirection', query_1.DFOrderDirection)\n\t        .constant('DFDataResponseType', query_1.DFDataResponseType)\n\t        .directive('datafree', function () {\n\t        return new directive_1.DatafreeDirective();\n\t    })\n\t        .directive('datafreeRow', function () {\n\t        return new directive_1.DatafreeRow();\n\t    })\n\t        .directive('datafreeEmpty', function () {\n\t        return new directive_1.DatafreeEmpty();\n\t    })\n\t        .directive('datafreePager', function () {\n\t        return new directive_1.DatafreePager();\n\t    })\n\t        .directive('datafreeOrder', function () {\n\t        return new directive_1.DatafreeOrder();\n\t    });\n\t})(AngularDatafree = exports.AngularDatafree || (exports.AngularDatafree = {}));\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = angular;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar client_1 = __webpack_require__(3);\n\tvar DFClientFactory = (function () {\n\t    function DFClientFactory($http, $q) {\n\t        this.$http = $http;\n\t        this.$q = $q;\n\t    }\n\t    DFClientFactory.prototype.createClient = function (query) {\n\t        return new client_1.default(this.$http, this.$q, query);\n\t    };\n\t    return DFClientFactory;\n\t}());\n\texports.default = DFClientFactory;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar query_1 = __webpack_require__(4);\n\tvar utilities_1 = __webpack_require__(5);\n\tvar angular_1 = __webpack_require__(1);\n\tvar DFClient = (function (_super) {\n\t    __extends(DFClient, _super);\n\t    function DFClient($http, $q, query) {\n\t        var _this = _super.call(this) || this;\n\t        _this.$http = $http;\n\t        _this.$q = $q;\n\t        _this.query = query;\n\t        _this.withCredentials = false;\n\t        return _this;\n\t    }\n\t    Object.defineProperty(DFClient.prototype, \"$query\", {\n\t        get: function () {\n\t            return this.query;\n\t        },\n\t        set: function (q) {\n\t            this.query = q;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFClient.prototype, \"$headers\", {\n\t        get: function () {\n\t            return this.headers;\n\t        },\n\t        set: function (headers) {\n\t            this.headers = headers;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DFClient.prototype.buildQueryParams = function (params) {\n\t        if (params === void 0) { params = {}; }\n\t        var o = {};\n\t        var p = angular_1.extend({}, this.query.$settings, params);\n\t        // Process OrderBy and/or OrderDirection\n\t        if (this.query.$settings.hasOwnProperty('orderCallback')\n\t            && this.query.$paramsMap.hasOwnProperty('orderBy')) {\n\t            var order = this.query.$order;\n\t            o[this.query.$paramsMap['orderBy']] = order[0];\n\t            if (order.length > 1) {\n\t                o[this.query.$paramsMap['orderDirection']] = order[1];\n\t            }\n\t        }\n\t        // Process the Filter value\n\t        if (this.query.$settings.hasOwnProperty('filterCallback')\n\t            && this.query.$paramsMap.hasOwnProperty('filter')) {\n\t            o[this.query.$paramsMap['filter']] = this.query.$filter;\n\t        }\n\t        for (var k in p) {\n\t            // Skip functions or properties already set\n\t            if (p[k] instanceof Function || k == 'orderBy' || k == 'orderDirection' || k == 'filter') {\n\t                continue;\n\t            }\n\t            var v = p[k];\n\t            if (this.query.$paramsMap.hasOwnProperty(k)) {\n\t                o[this.query.$paramsMap[k]] = v;\n\t            }\n\t            else {\n\t                o[k] = v;\n\t            }\n\t        }\n\t        return o;\n\t    };\n\t    DFClient.prototype.handleResponse = function (response) {\n\t        if (this.query.$dataResponseType === query_1.DFDataResponseType.BODY) {\n\t            this.query.$total = parseInt(response.headers(this.query.$countProperty), 10);\n\t            return response.data;\n\t        }\n\t        this.query.$total = parseInt(response.data[this.query.$countProperty], 10);\n\t        return (this.query.$dataProperty !== null)\n\t            ? response.data[this.query.$dataProperty] : response.data;\n\t    };\n\t    DFClient.prototype.dispatch = function (data) {\n\t        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\n\t            var l = _a[_i];\n\t            l.bind(this, data)();\n\t        }\n\t    };\n\t    DFClient.prototype.sendRequest = function (params) {\n\t        var config = {\n\t            url: this.query.$url,\n\t            method: this.query.$method,\n\t            withCredentials: this.withCredentials,\n\t            headers: this.headers,\n\t        };\n\t        if (this.$query.$method.toLocaleLowerCase() == 'get') {\n\t            config.params = this.buildQueryParams(params);\n\t        }\n\t        else {\n\t            config.data = this.buildQueryParams(params);\n\t        }\n\t        return this.$http(config);\n\t    };\n\t    DFClient.prototype.send = function (params) {\n\t        var _this = this;\n\t        var defer = this.$q.defer();\n\t        this.sendRequest(params).then(function (response) {\n\t            var data = _this.handleResponse(response);\n\t            defer.resolve(data);\n\t            _this.dispatch(data);\n\t        }, function (reason) {\n\t            defer.reject(reason);\n\t        });\n\t        return defer.promise;\n\t    };\n\t    DFClient.prototype.page = function (p) {\n\t        this.query.$page = p;\n\t        return this.send();\n\t    };\n\t    DFClient.prototype.prev = function () {\n\t        return this.page(this.query.$page - 1);\n\t    };\n\t    DFClient.prototype.next = function () {\n\t        return this.page(this.query.$page + 1);\n\t    };\n\t    DFClient.prototype.first = function () {\n\t        return this.page(0);\n\t    };\n\t    DFClient.prototype.last = function () {\n\t        var _this = this;\n\t        if (null == this.query.$total || this.query.$total == 0) {\n\t            var defer_1 = this.$q.defer();\n\t            // We don't have a total, so we need to get one. Do so without triggering the listeners\n\t            this.sendRequest({ page: 0, limit: 1 }).then(function (response) {\n\t                _this.handleResponse(response);\n\t                // pages start a 0, so reduce the last page by 1\n\t                var page = Math.ceil(_this.query.$total / _this.query.$limit) - 1;\n\t                _this.page(page).then(function (data) {\n\t                    defer_1.resolve(data);\n\t                }, function (err) {\n\t                    defer_1.reject(err);\n\t                });\n\t            }, function (err) {\n\t                defer_1.reject(err);\n\t            });\n\t            return defer_1.promise;\n\t        }\n\t        // pages start a 0, so reduce the last page by 1\n\t        var page = Math.ceil(this.query.$total / this.query.$limit) - 1;\n\t        return this.page(page);\n\t    };\n\t    DFClient.prototype.limit = function (l) {\n\t        this.query.$limit = l;\n\t        return this.page(0);\n\t    };\n\t    DFClient.prototype.order = function (column, direction) {\n\t        this.query.$orderBy = column;\n\t        this.query.$orderDirection = direction;\n\t        return this.send();\n\t    };\n\t    DFClient.prototype.filter = function (q) {\n\t        this.query.$filter = q;\n\t        return this.first();\n\t    };\n\t    return DFClient;\n\t}(utilities_1.Subscribeable));\n\texports.default = DFClient;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\n\t * Created by alex.boyce on 4/4/17.\n\t */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar angular_1 = __webpack_require__(1);\n\tvar DFQuery = (function () {\n\t    function DFQuery(url, method, defaultSettings, paramsMap) {\n\t        if (method === void 0) { method = 'GET'; }\n\t        this.url = url;\n\t        this.method = method;\n\t        this.settings = {\n\t            page: 0,\n\t            limit: 10,\n\t            orderCallback: function (order, direction) {\n\t                return [\n\t                    order,\n\t                    direction\n\t                ];\n\t            },\n\t            filterCallback: function (filter) {\n\t                return filter;\n\t            },\n\t            pageCallback: function (page) {\n\t                return page;\n\t            }\n\t        };\n\t        this.dataResponseType = DFDataResponseType.BODY;\n\t        this.countProperty = 'X-Count';\n\t        this.total = 0;\n\t        if (defaultSettings != null) {\n\t            this.settings = angular_1.extend({}, this.settings, defaultSettings);\n\t        }\n\t        this.paramsMap = paramsMap;\n\t        if (this.paramsMap == null) {\n\t            this.paramsMap = new DFDefaultParamsMap();\n\t        }\n\t    }\n\t    Object.defineProperty(DFQuery.prototype, \"$settings\", {\n\t        get: function () {\n\t            return this.settings;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$url\", {\n\t        get: function () {\n\t            return this.url;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$method\", {\n\t        get: function () {\n\t            return this.method;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$page\", {\n\t        get: function () {\n\t            return this.settings.pageCallback.call(this, this.settings.page, this.settings.limit);\n\t        },\n\t        set: function (p) {\n\t            this.settings.page = Math.max(p, 0);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$limit\", {\n\t        get: function () {\n\t            return this.settings.limit;\n\t        },\n\t        set: function (l) {\n\t            this.settings.limit = Math.max(l, 0);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$order\", {\n\t        get: function () {\n\t            return this.settings.orderCallback.call(this, this.$orderBy, this.$orderDirection);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$orderBy\", {\n\t        get: function () {\n\t            return this.settings.orderBy;\n\t        },\n\t        set: function (column) {\n\t            this.settings.orderBy = column;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$orderDirection\", {\n\t        get: function () {\n\t            return this.settings.orderDirection;\n\t        },\n\t        set: function (direction) {\n\t            this.settings.orderDirection = direction;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$filter\", {\n\t        get: function () {\n\t            return this.settings.filterCallback.call(this, this.settings.filter);\n\t        },\n\t        set: function (q) {\n\t            this.settings.filter = q;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$total\", {\n\t        get: function () {\n\t            return this.total;\n\t        },\n\t        set: function (t) {\n\t            this.total = t;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$paramsMap\", {\n\t        get: function () {\n\t            return this.paramsMap;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$dataResponseType\", {\n\t        get: function () {\n\t            return this.dataResponseType;\n\t        },\n\t        set: function (type) {\n\t            this.dataResponseType = type;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$countProperty\", {\n\t        get: function () {\n\t            return this.countProperty;\n\t        },\n\t        set: function (prop) {\n\t            this.countProperty = prop;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(DFQuery.prototype, \"$dataProperty\", {\n\t        get: function () {\n\t            return this.dataProperty;\n\t        },\n\t        set: function (prop) {\n\t            this.dataProperty = prop;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    return DFQuery;\n\t}());\n\texports.default = DFQuery;\n\tvar DFDefaultParamsMap = (function () {\n\t    function DFDefaultParamsMap() {\n\t        this.page = 'page';\n\t        this.limit = 'limit';\n\t        this.orderBy = 'order_by';\n\t        this.orderDirection = 'order_direction';\n\t        this.filter = 'q';\n\t    }\n\t    return DFDefaultParamsMap;\n\t}());\n\texports.DFDefaultParamsMap = DFDefaultParamsMap;\n\tvar DFOrderDirection = (function () {\n\t    function DFOrderDirection() {\n\t    }\n\t    DFOrderDirection.ASC = 'ASC';\n\t    DFOrderDirection.DESC = 'DESC';\n\t    return DFOrderDirection;\n\t}());\n\texports.DFOrderDirection = DFOrderDirection;\n\tvar DFDataResponseType = (function () {\n\t    function DFDataResponseType() {\n\t    }\n\t    DFDataResponseType.PROPERTY = 'PROPERTY';\n\t    DFDataResponseType.BODY = 'BODY';\n\t    return DFDataResponseType;\n\t}());\n\texports.DFDataResponseType = DFDataResponseType;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Created by alex.boyce on 4/6/17.\n\t */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar Subscribeable = (function () {\n\t    function Subscribeable() {\n\t        this.listeners = [];\n\t    }\n\t    Subscribeable.prototype.subscribe = function (l) {\n\t        this.listeners.push(l);\n\t    };\n\t    Subscribeable.prototype.unsubscribe = function (l) {\n\t        this.listeners = this.listeners.filter(function (f) {\n\t            return f !== l;\n\t        });\n\t    };\n\t    return Subscribeable;\n\t}());\n\texports.Subscribeable = Subscribeable;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t/**\n\t * Created by alex.boyce on 4/5/17.\n\t */\n\tvar angular_1 = __webpack_require__(1);\n\tvar controller_1 = __webpack_require__(7);\n\tvar query_1 = __webpack_require__(4);\n\tvar DatafreeDirective = (function () {\n\t    function DatafreeDirective() {\n\t        this.restrict = 'E';\n\t        this.transclude = true;\n\t        this.bindToController = true;\n\t        this.template = '<ng-transclude></ng-transclude>';\n\t        this.controllerAs = '$df';\n\t        this.scope = {\n\t            query: '=?',\n\t            client: '=?',\n\t            autoload: '=?'\n\t        };\n\t        this.controller = ['DFClientFactory', controller_1.DatafreeDirectiveController];\n\t    }\n\t    return DatafreeDirective;\n\t}());\n\texports.DatafreeDirective = DatafreeDirective;\n\tvar DatafreeRow = (function () {\n\t    function DatafreeRow() {\n\t        this.restrict = 'ACE';\n\t        this.transclude = \"element\";\n\t        this.require = '^^datafree';\n\t        this.link = function (scope, e, attrs, $df, transFn) {\n\t            var parent = e.parent();\n\t            var watch = function (data) {\n\t                parent.html('');\n\t                var rows = angular_1.isArray(data) ? data : [data];\n\t                rows.forEach(function (row) {\n\t                    transFn(function (transEl, transScope) {\n\t                        transScope.data = row;\n\t                        parent.append(transEl);\n\t                    });\n\t                });\n\t            };\n\t            $df.subscribe(watch);\n\t            scope.$on('$destroy', function () {\n\t                $df.unsubscribe(watch);\n\t            });\n\t        };\n\t    }\n\t    return DatafreeRow;\n\t}());\n\texports.DatafreeRow = DatafreeRow;\n\tvar DatafreeEmpty = (function () {\n\t    function DatafreeEmpty() {\n\t        this.restrict = 'ACE';\n\t        this.transclude = 'element';\n\t        this.require = '^^datafree';\n\t        this.link = function (scope, e, attr, $df, transFn) {\n\t            var tE;\n\t            var tP;\n\t            var show = function (e) {\n\t                if (e != null) {\n\t                    if (e.show != null) {\n\t                        e.show();\n\t                    }\n\t                    else {\n\t                        tP.append(e);\n\t                    }\n\t                }\n\t            };\n\t            var hide = function (e) {\n\t                if (e != null) {\n\t                    if (e.hide != null) {\n\t                        e.hide();\n\t                    }\n\t                    else {\n\t                        e.remove();\n\t                    }\n\t                }\n\t            };\n\t            var watch = function (data) {\n\t                if (tE != null) {\n\t                    if (data != null\n\t                        && ((angular_1.isArray(data) && data.length === 0)\n\t                            || (!angular_1.isArray(data) && angular_1.isObject(data) && Object.keys(data).length > 0))) {\n\t                        show(tE);\n\t                    }\n\t                    else {\n\t                        hide(tE);\n\t                    }\n\t                }\n\t            };\n\t            $df.subscribe(watch);\n\t            scope.$on('$destroy', function () {\n\t                $df.unsubscribe(watch);\n\t            });\n\t            transFn(function (transEl, transScope) {\n\t                tE = transEl;\n\t                tP = e.parent();\n\t                transEl.append(e.children());\n\t                e.parent().append(transEl);\n\t            });\n\t        };\n\t    }\n\t    return DatafreeEmpty;\n\t}());\n\texports.DatafreeEmpty = DatafreeEmpty;\n\tvar DatafreePager = (function () {\n\t    function DatafreePager() {\n\t        this.restrict = 'E';\n\t        this.require = ['datafreePager', '^^datafree'];\n\t        this.scope = {\n\t            numberLimit: '@?',\n\t            showFirst: '@?',\n\t            showPrev: '@?',\n\t            showNext: '@?',\n\t            showLast: '@?',\n\t            firstLabel: '@?',\n\t            prevLabel: '@?',\n\t            nextLabel: '@?',\n\t            lastLabel: '@?'\n\t        };\n\t        this.templateUrl = 'datafree-pager.html';\n\t        this.bindToController = true;\n\t        this.controllerAs = '$pager';\n\t        this.controller = controller_1.DatafreePagerDirectiveController;\n\t        this.link = function (scope, element, attrs, ctrls) {\n\t            var $pager = ctrls[0];\n\t            $pager.datafree = ctrls[1];\n\t        };\n\t    }\n\t    return DatafreePager;\n\t}());\n\texports.DatafreePager = DatafreePager;\n\tvar DatafreeOrder = (function () {\n\t    function DatafreeOrder() {\n\t        this.restrict = 'A';\n\t        this.require = '^^datafree';\n\t        this.scope = {\n\t            column: '@datafreeOrder'\n\t        };\n\t        this.link = function (scope, e, attrs, $df) {\n\t            scope.direction = null;\n\t            e.addClass('orderable');\n\t            var checkSort = function () {\n\t                var column = this.client.$query.$orderBy;\n\t                var direction = this.client.$query.$orderDirection;\n\t                if (scope.column == column) {\n\t                    e.addClass(direction == query_1.DFOrderDirection.DESC ? 'order-desc' : 'order-asc');\n\t                    scope.direction = direction;\n\t                }\n\t            };\n\t            $df.subscribe(checkSort);\n\t            scope.$on('$destroy', function () {\n\t                $df.unsubscribe(checkSort);\n\t            });\n\t            e.on('click', function () {\n\t                angular_1.forEach(e.parent().children(), function (e) {\n\t                    var $e = angular_1.element(e);\n\t                    $e.removeClass('order-asc').removeClass('order-desc');\n\t                });\n\t                var direction = scope.direction;\n\t                if (scope.column == $df.client.$query.$orderBy || direction == null) {\n\t                    direction = direction == query_1.DFOrderDirection.ASC ? 'DESC' : 'ASC';\n\t                }\n\t                $df.order(scope.column, direction);\n\t            });\n\t        };\n\t    }\n\t    return DatafreeOrder;\n\t}());\n\texports.DatafreeOrder = DatafreeOrder;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/**\n\t * Created by alex.boyce on 4/5/17.\n\t */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar utilities_1 = __webpack_require__(5);\n\tvar DatafreeDirectiveController = (function (_super) {\n\t    __extends(DatafreeDirectiveController, _super);\n\t    function DatafreeDirectiveController(clientFactory) {\n\t        var _this = _super.call(this) || this;\n\t        _this.clientFactory = clientFactory;\n\t        _this.autoload = true;\n\t        _this.dataListener = (function (data) {\n\t            _this.data = data;\n\t            _this.dispatch(data);\n\t        }).bind(_this);\n\t        return _this;\n\t    }\n\t    DatafreeDirectiveController.prototype.dispatch = function (data) {\n\t        var $self = this;\n\t        this.listeners.forEach(function (l) {\n\t            l.bind($self, data)();\n\t        });\n\t    };\n\t    Object.defineProperty(DatafreeDirectiveController.prototype, \"$data\", {\n\t        get: function () {\n\t            return this.data;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    DatafreeDirectiveController.prototype.prev = function () {\n\t        return this.client.prev();\n\t    };\n\t    DatafreeDirectiveController.prototype.next = function () {\n\t        return this.client.next();\n\t    };\n\t    DatafreeDirectiveController.prototype.first = function () {\n\t        return this.client.first();\n\t    };\n\t    DatafreeDirectiveController.prototype.last = function () {\n\t        return this.client.last();\n\t    };\n\t    DatafreeDirectiveController.prototype.page = function (p) {\n\t        return this.client.page(p);\n\t    };\n\t    DatafreeDirectiveController.prototype.order = function (column, direction) {\n\t        return this.client.order(column, direction);\n\t    };\n\t    DatafreeDirectiveController.prototype.limit = function (l) {\n\t        return this.client.limit(l);\n\t    };\n\t    DatafreeDirectiveController.prototype.filter = function (q) {\n\t        return this.client.filter(q);\n\t    };\n\t    DatafreeDirectiveController.prototype.$onInit = function () {\n\t        if (null != this.query && null == this.client) {\n\t            this.client = this.clientFactory.createClient(this.query);\n\t        }\n\t        else if (null == this.query && null == this.client) {\n\t            throw new Error(\"Either a DFQuery or a DFClient object must be provided to Datafree.\");\n\t        }\n\t        this.client.subscribe(this.dataListener);\n\t    };\n\t    DatafreeDirectiveController.prototype.$postLink = function () {\n\t        if (this.autoload == true) {\n\t            this.client.send();\n\t        }\n\t    };\n\t    DatafreeDirectiveController.prototype.$onDestroy = function () {\n\t        this.client.unsubscribe(this.dataListener);\n\t    };\n\t    return DatafreeDirectiveController;\n\t}(utilities_1.Subscribeable));\n\texports.DatafreeDirectiveController = DatafreeDirectiveController;\n\tvar DatafreePagerDirectiveController = (function () {\n\t    function DatafreePagerDirectiveController() {\n\t        this.numberLimit = 5;\n\t        this.firstLabel = \"First\";\n\t        this.lastLabel = \"Last\";\n\t        this.prevLabel = \"Back\";\n\t        this.nextLabel = \"Next\";\n\t        this.showFirst = true;\n\t        this.showPrev = true;\n\t        this.showNext = true;\n\t        this.showLast = true;\n\t        this.numbers = [];\n\t        this.currentPage = 1;\n\t        this.limit = 10;\n\t        this.maxPages = 1;\n\t        this.total = 0;\n\t    }\n\t    DatafreePagerDirectiveController.prototype.prev = function () {\n\t        if (this.currentPage > 1) {\n\t            this.datafree.prev();\n\t        }\n\t    };\n\t    DatafreePagerDirectiveController.prototype.next = function () {\n\t        if (this.currentPage < this.maxPages) {\n\t            this.datafree.next();\n\t        }\n\t    };\n\t    DatafreePagerDirectiveController.prototype.first = function () {\n\t        this.datafree.first();\n\t    };\n\t    DatafreePagerDirectiveController.prototype.last = function () {\n\t        this.datafree.last();\n\t    };\n\t    DatafreePagerDirectiveController.prototype.page = function (p) {\n\t        var page = p - 1;\n\t        if (page >= 0 && page < this.maxPages) {\n\t            this.datafree.page(page);\n\t        }\n\t    };\n\t    DatafreePagerDirectiveController.prototype.skipBack = function () {\n\t        this.page(Math.max(1, this.currentPage - this.numberLimit));\n\t    };\n\t    DatafreePagerDirectiveController.prototype.skipForward = function () {\n\t        this.page(Math.min(this.maxPages, this.currentPage + this.numberLimit));\n\t    };\n\t    DatafreePagerDirectiveController.prototype.$onInit = function () {\n\t        this.dataChange = (function () {\n\t            this.currentPage = this.datafree.client.$query.$page + 1; // query.$page starts at 0, pager starts at 1\n\t            this.limit = this.datafree.client.$query.$limit;\n\t            this.total = this.datafree.client.$query.$total;\n\t            this.maxPages = Math.ceil(this.total / this.limit);\n\t            var median = Math.floor(this.numberLimit / 2);\n\t            this.numbers = [];\n\t            if (median > 0) {\n\t                var start = Math.max(1, Math.min(this.maxPages - this.numberLimit + 1, this.currentPage - median));\n\t                var max = Math.min(start + this.numberLimit, this.maxPages + 1);\n\t                for (var i = start; i < max; i++) {\n\t                    this.numbers.push(i);\n\t                }\n\t            }\n\t        }).bind(this);\n\t    };\n\t    DatafreePagerDirectiveController.prototype.$postLink = function () {\n\t        this.datafree.subscribe(this.dataChange);\n\t    };\n\t    DatafreePagerDirectiveController.prototype.$onDestroy = function () {\n\t        this.datafree.unsubscribe(this.dataChange);\n\t    };\n\t    return DatafreePagerDirectiveController;\n\t}());\n\texports.DatafreePagerDirectiveController = DatafreePagerDirectiveController;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// angular-datafree.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fed52489ae461c4e9cb5","import * as angular from \"angular\";\nimport DFClientFactory from \"./factory\";\nimport {DatafreeDirective, DatafreeEmpty, DatafreeOrder, DatafreePager, DatafreeRow} from \"./directive\";\nimport {IHttpService, IQService} from \"angular\";\nimport DFQuery, {DFDataResponseType, DFOrderDirection} from \"./query\";\n\nexport module AngularDatafree {\n    angular.module('ae.datafree', ['ng'])\n        .factory('DFClientFactory', ['$http', '$q', ($http: IHttpService, $q: IQService) => {\n            return new DFClientFactory($http, $q);\n        }])\n        .factory('DFQuery', () => {\n            return DFQuery;\n        })\n        .constant('DFOrderDirection', DFOrderDirection)\n        .constant('DFDataResponseType', DFDataResponseType)\n        .directive('datafree', () => {\n            return new DatafreeDirective();\n        })\n        .directive('datafreeRow', () => {\n            return new DatafreeRow();\n        })\n        .directive('datafreeEmpty', () => {\n            return new DatafreeEmpty();\n        })\n        .directive('datafreePager', () => {\n            return new DatafreePager();\n        })\n        .directive('datafreeOrder', () => {\n            return new DatafreeOrder();\n        })\n    ;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/angular-datafree.ts\n// module id = 0\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 1\n// module chunks = 0","/**\n * Created by alex.boyce on 4/4/17.\n */\nimport DFQuery from \"./query\";\nimport DFClient from \"./client\";\nimport {IHttpService, IQService} from \"angular\";\n\nexport default class DFClientFactory {\n\n    constructor(private $http: IHttpService, private $q:IQService) { }\n\n    createClient(query: DFQuery): DFClient {\n        return new DFClient(this.$http, this.$q, query);\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/factory.ts\n// module id = 2\n// module chunks = 0","import DFQuery, {DFDataResponseType, DFOrderDirection, IDFQuerySettings} from \"./query\";\nimport {Subscribeable} from \"./utilities\";\nimport {IHttpService, IHttpPromiseCallbackArg, IQService, IPromise, IDeferred, extend} from \"angular\";\n\nexport default class DFClient extends Subscribeable {\n    private headers: Object;\n    private withCredentials:boolean = false;\n\n    constructor(private $http: IHttpService, private $q: IQService, private query: DFQuery) {\n        super();\n    }\n\n    get $query(): DFQuery {\n        return this.query;\n    }\n\n    set $query(q: DFQuery) {\n        this.query = q;\n    }\n\n    get $headers(): Object {\n        return this.headers;\n    }\n\n    set $headers(headers: Object) {\n        this.headers = headers;\n    }\n\n    public buildQueryParams(params: Object = {}): Object {\n        let o: Object = {};\n        let p: Object = extend({}, this.query.$settings, params);\n\n        // Process OrderBy and/or OrderDirection\n        if (this.query.$settings.hasOwnProperty('orderCallback')\n            && this.query.$paramsMap.hasOwnProperty('orderBy')) {\n            let order:Array<string | DFOrderDirection> = this.query.$order;\n            o[this.query.$paramsMap['orderBy']] = order[0];\n\n            if (order.length > 1) {\n                o[this.query.$paramsMap['orderDirection']] = order[1];\n            }\n        }\n\n        // Process the Filter value\n        if (this.query.$settings.hasOwnProperty('filterCallback')\n            && this.query.$paramsMap.hasOwnProperty('filter')) {\n            o[this.query.$paramsMap['filter']] = this.query.$filter;\n        }\n\n        for (let k in p) {\n            // Skip functions or properties already set\n            if (p[k] instanceof Function || k == 'orderBy' || k =='orderDirection' || k == 'filter') {\n                continue;\n            }\n\n            let v = p[k];\n\n            if (this.query.$paramsMap.hasOwnProperty(k)) {\n                o[this.query.$paramsMap[k]] = v;\n            } else {\n                o[k] = v;\n            }\n        }\n\n        return o;\n    }\n\n    protected handleResponse(response: IHttpPromiseCallbackArg<any>): any {\n        if (this.query.$dataResponseType === DFDataResponseType.BODY) {\n            this.query.$total = parseInt(response.headers(this.query.$countProperty), 10);\n\n            return response.data;\n        }\n\n        this.query.$total = parseInt(response.data[this.query.$countProperty], 10);\n\n        return (this.query.$dataProperty !== null)\n            ? response.data[this.query.$dataProperty] : response.data;\n    }\n\n    protected dispatch(data) {\n        for(let l of this.listeners) {\n            l.bind(this, data)();\n        }\n    }\n\n    protected sendRequest(params?: IDFQuerySettings): IPromise<any> {\n        let config:any = {\n            url: this.query.$url,\n            method: this.query.$method,\n            withCredentials: this.withCredentials,\n            headers: this.headers,\n        };\n\n        if (this.$query.$method.toLocaleLowerCase() == 'get') {\n            config.params = this.buildQueryParams(params);\n        } else {\n            config.data = this.buildQueryParams(params);\n        }\n\n        return this.$http(config);\n    }\n\n    send(params?: IDFQuerySettings): IPromise<any> {\n        let defer: IDeferred<any> = this.$q.defer();\n\n        this.sendRequest(params).then((response) => {\n            let data = this.handleResponse(response);\n            defer.resolve(data);\n            this.dispatch(data);\n        }, (reason) => {\n            defer.reject(reason);\n        });\n\n        return defer.promise;\n    }\n\n    page(p: number): IPromise<any> {\n        this.query.$page = p;\n\n        return this.send();\n    }\n\n    prev(): IPromise<any> {\n        return this.page(this.query.$page - 1);\n    }\n\n    next(): IPromise<any> {\n        return this.page(this.query.$page + 1);\n    }\n\n    first(): IPromise<any> {\n        return this.page(0);\n    }\n\n    last(): IPromise<any> {\n        if (null == this.query.$total ||  this.query.$total == 0) {\n            let defer:IDeferred<any> = this.$q.defer();\n\n            // We don't have a total, so we need to get one. Do so without triggering the listeners\n            this.sendRequest({page: 0, limit: 1}).then((response) => {\n                this.handleResponse(response);\n                // pages start a 0, so reduce the last page by 1\n                let page:number = Math.ceil(this.query.$total / this.query.$limit) - 1;\n\n                this.page(page).then((data) => {\n                    defer.resolve(data);\n                }, (err) => {\n                    defer.reject(err);\n                })\n            }, (err) => {\n                defer.reject(err);\n            });\n\n            return defer.promise;\n        }\n\n        // pages start a 0, so reduce the last page by 1\n        let page:number = Math.ceil(this.query.$total / this.query.$limit) - 1;\n\n        return this.page(page);\n    }\n\n    limit(l: number): IPromise<any> {\n        this.query.$limit = l;\n\n        return this.page(0);\n    }\n\n    order(column:string, direction: \"ASC\" | \"DESC\"): IPromise<any> {\n        this.query.$orderBy = column;\n        this.query.$orderDirection = direction;\n\n        return this.send();\n    }\n\n    filter(q?: string): IPromise<any> {\n        this.query.$filter = q;\n\n        return this.first();\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client.ts\n// module id = 3\n// module chunks = 0","/**\n * Created by alex.boyce on 4/4/17.\n */\n\nimport {extend} from \"angular\";\n\nexport default class DFQuery {\n\n    private settings: IDFQuerySettings = {\n        page: 0,\n        limit: 10,\n        orderCallback: (order:string, direction:DFOrderDirection) => {\n            return [\n                order,\n                direction\n            ];\n        },\n        filterCallback: (filter) => {\n            return filter;\n        },\n        pageCallback: (page) => {\n            return page;\n        }\n    };\n\n    private dataResponseType: DFDataResponseType = DFDataResponseType.BODY;\n    private countProperty: string = 'X-Count';\n    private dataProperty: string;\n\n    private total: number = 0;\n\n    private paramsMap: IDFParamsMap;\n\n    constructor(\n        private url:string,\n        private method:string = 'GET',\n        defaultSettings?: IDFQuerySettings,\n        paramsMap?: IDFParamsMap\n    ) {\n        if (defaultSettings != null) {\n            this.settings = extend({}, this.settings, defaultSettings);\n        }\n\n        this.paramsMap = paramsMap;\n\n        if (this.paramsMap == null) {\n            this.paramsMap = new DFDefaultParamsMap();\n        }\n    }\n\n    get $settings(): IDFQuerySettings {\n        return this.settings;\n    }\n\n    get $url(): string {\n        return this.url;\n    }\n\n    get $method(): string {\n        return this.method;\n    }\n\n    get $page(): number {\n        return this.settings.pageCallback.call(this, this.settings.page, this.settings.limit);\n    }\n\n    set $page(p: number) {\n        this.settings.page = Math.max(p, 0);\n    }\n\n    get $limit(): number {\n        return this.settings.limit;\n    }\n\n    set $limit(l: number) {\n        this.settings.limit = Math.max(l, 0);\n    }\n\n    get $order(): Array<string|DFOrderDirection> {\n        return this.settings.orderCallback.call(this, this.$orderBy, this.$orderDirection);\n    }\n\n    set $orderBy(column: string) {\n        this.settings.orderBy = column;\n    }\n\n    get $orderBy(): string {\n        return this.settings.orderBy;\n    }\n\n    set $orderDirection(direction: \"ASC\" | \"DESC\") {\n        this.settings.orderDirection = direction;\n    }\n\n    get $orderDirection(): \"ASC\" | \"DESC\" {\n        return this.settings.orderDirection;\n    }\n\n    get $filter(): string {\n        return this.settings.filterCallback.call(this, this.settings.filter);\n    }\n\n    set $filter(q: string) {\n        this.settings.filter = q;\n    }\n\n    get $total(): number {\n        return this.total;\n    }\n\n    set $total(t: number) {\n        this.total = t;\n    }\n\n    get $paramsMap(): IDFParamsMap {\n        return this.paramsMap;\n    }\n\n    get $dataResponseType():DFDataResponseType {\n        return this.dataResponseType;\n    }\n\n    set $dataResponseType(type: DFDataResponseType) {\n        this.dataResponseType = type;\n    }\n\n    get $countProperty():string {\n        return this.countProperty;\n    }\n\n    set $countProperty(prop: string) {\n        this.countProperty = prop;\n    }\n\n    get $dataProperty():string {\n        return this.dataProperty;\n    }\n\n    set $dataProperty(prop: string) {\n        this.dataProperty = prop;\n    }\n\n}\n\nexport interface IDFQuerySettings {\n    page: number;\n    limit: number;\n    orderBy?: string;\n    orderDirection?: \"ASC\" | \"DESC\";\n    filter?: string;\n    orderCallback?: Function;\n    filterCallback?: Function;\n    pageCallback?: Function;\n}\n\nexport interface IDFParamsMap {\n    page: string;\n    limit: string;\n    orderBy: string;\n    orderDirection: string;\n    filter: string;\n}\n\nexport class DFDefaultParamsMap implements IDFParamsMap{\n    page = 'page';\n    limit = 'limit';\n    orderBy = 'order_by';\n    orderDirection = 'order_direction';\n    filter = 'q';\n}\n\nexport class DFOrderDirection {\n    static ASC:\"ASC\" = 'ASC';\n    static DESC:\"DESC\" = 'DESC';\n}\n\nexport class DFDataResponseType {\n    static PROPERTY = 'PROPERTY';\n    static BODY = 'BODY';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/query.ts\n// module id = 4\n// module chunks = 0","/**\n * Created by alex.boyce on 4/6/17.\n */\n\nexport abstract class Subscribeable {\n    protected listeners:Array<Function> = [];\n\n    protected abstract dispatch(...args: any[]);\n\n    subscribe(l:Function) {\n        this.listeners.push(l);\n    }\n\n    unsubscribe(l:Function) {\n        this.listeners = this.listeners.filter((f) => {\n            return f !== l;\n        });\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utilities.ts\n// module id = 5\n// module chunks = 0","/**\n * Created by alex.boyce on 4/5/17.\n */\nimport {IAttributes, IDirective, IScope, ITranscludeFunction, isArray, isObject, element as $element, forEach,\n    IDirectiveLinkFn, IController} from \"angular\";\nimport {DatafreeDirectiveController, DatafreePagerDirectiveController} from \"./controller\";\nimport {DFOrderDirection} from \"./query\";\n\nexport class DatafreeDirective implements IDirective {\n    restrict = 'E';\n    transclude = true;\n    bindToController = true;\n    template = '<ng-transclude></ng-transclude>';\n    controllerAs = '$df';\n    scope = {\n        query: '=?',\n        client: '=?',\n        autoload: '=?'\n    };\n    controller = ['DFClientFactory', DatafreeDirectiveController];\n}\n\nexport class DatafreeRow implements IDirective {\n    restrict = 'ACE';\n    transclude:\"element\" = \"element\";\n    require = '^^datafree';\n    link:IDirectiveLinkFn = (\n        scope: IScope,\n        e: JQuery,\n        attrs: IAttributes,\n        $df:DatafreeDirectiveController,\n        transFn: ITranscludeFunction\n    ) => {\n        let parent:JQuery = e.parent();\n\n        let watch:Function = (data) => {\n            parent.html('');\n\n            let rows = isArray(data) ? data : [data];\n\n            rows.forEach(function(row) {\n                transFn((transEl: JQuery, transScope: IScope) => {\n                    transScope.data = row;\n                    parent.append(transEl);\n                });\n            });\n        };\n\n        $df.subscribe(watch);\n\n        scope.$on('$destroy', () => {\n            $df.unsubscribe(watch);\n        })\n    }\n}\n\nexport class DatafreeEmpty implements IDirective {\n    restrict = 'ACE';\n    transclude:'element' = 'element';\n    require = '^^datafree';\n    link:IDirectiveLinkFn = (\n        scope: IScope,\n        e: JQuery,\n        attr: IAttributes,\n        $df: DatafreeDirectiveController,\n        transFn: ITranscludeFunction\n    ) => {\n        let tE:JQuery;\n        let tP:JQuery;\n\n        let show:Function = (e:JQuery) => {\n            if (e != null) {\n                if (e.show != null) {\n                    e.show();\n                } else {\n                    tP.append(e);\n                }\n            }\n        };\n\n        let hide:Function = (e:JQuery) => {\n            if (e != null) {\n                if (e.hide != null) {\n                    e.hide();\n                } else {\n                    e.remove();\n                }\n            }\n        };\n\n        let watch: Function = (data) => {\n            if (tE != null) {\n                if (data != null\n                    && ((isArray(data) && data.length === 0)\n                        || (!isArray(data) && isObject(data) && Object.keys(data).length > 0))\n                ) {\n                    show(tE);\n                } else {\n                    hide(tE);\n                }\n            }\n        };\n\n        $df.subscribe(watch);\n\n        scope.$on('$destroy', () => {\n            $df.unsubscribe(watch);\n        });\n\n        transFn((transEl:JQuery, transScope: IScope) => {\n            tE = transEl;\n            tP = e.parent();\n            transEl.append(e.children());\n            e.parent().append(transEl);\n        })\n    }\n}\n\nexport class DatafreePager implements IDirective {\n    restrict = 'E';\n    require = ['datafreePager', '^^datafree'];\n    scope = {\n        numberLimit: '@?',\n        showFirst: '@?',\n        showPrev: '@?',\n        showNext: '@?',\n        showLast: '@?',\n        firstLabel: '@?',\n        prevLabel: '@?',\n        nextLabel: '@?',\n        lastLabel: '@?'\n    };\n    templateUrl = 'datafree-pager.html';\n    bindToController = true;\n    controllerAs = '$pager';\n    controller = DatafreePagerDirectiveController;\n    link:IDirectiveLinkFn = (scope: IScope, element: JQuery, attrs: IAttributes, ctrls: IController[]) => {\n        let $pager = <DatafreePagerDirectiveController> ctrls[0];\n        $pager.datafree = <DatafreeDirectiveController> ctrls[1];\n    }\n}\n\nexport class DatafreeOrder implements IDirective {\n    restrict = 'A';\n    require = '^^datafree';\n    scope = {\n        column: '@datafreeOrder'\n    };\n    link:IDirectiveLinkFn = (scope:IScope, e: JQuery, attrs: IAttributes, $df: DatafreeDirectiveController) => {\n        scope.direction = null;\n        e.addClass('orderable');\n\n        let checkSort:Function = function() {\n            let column = this.client.$query.$orderBy;\n            let direction = this.client.$query.$orderDirection;\n\n            if (scope.column == column) {\n                e.addClass(direction == DFOrderDirection.DESC ? 'order-desc' : 'order-asc');\n                scope.direction = direction;\n            }\n        };\n\n        $df.subscribe(checkSort);\n\n        scope.$on('$destroy', () => {\n            $df.unsubscribe(checkSort);\n        });\n\n        e.on('click', function() {\n            forEach(e.parent().children(), function(e) {\n                let $e = $element(e);\n                $e.removeClass('order-asc').removeClass('order-desc');\n            });\n\n            let direction = scope.direction;\n\n            if (scope.column == $df.client.$query.$orderBy || direction == null) {\n                direction = direction == DFOrderDirection.ASC ? 'DESC' : 'ASC';\n            }\n\n            $df.order(scope.column, direction);\n        });\n    }\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/directive.ts\n// module id = 6\n// module chunks = 0","/**\n * Created by alex.boyce on 4/5/17.\n */\n\nimport {IController,IPromise} from \"angular\";\nimport DFQuery from \"./query\";\nimport DFClientFactory from \"./factory\";\nimport DFClient from \"./client\";\nimport {Subscribeable} from \"./utilities\";\n\nexport class DatafreeDirectiveController extends Subscribeable implements IController{\n    public query:DFQuery;\n    public client:DFClient;\n    public autoload:boolean = true;\n\n    private data:any;\n\n    protected dataListener:Function;\n\n    constructor(private clientFactory:DFClientFactory) {\n        super();\n\n        this.dataListener = ((data) => {\n            this.data = data;\n            this.dispatch(data);\n        }).bind(this);\n    }\n\n    protected dispatch(data) {\n        let $self = this;\n        this.listeners.forEach(function(l) {\n            l.bind($self, data)();\n        });\n    }\n\n    get $data(): any {\n        return this.data;\n    }\n\n    prev(): IPromise<any> {\n        return this.client.prev();\n    }\n\n    next(): IPromise<any> {\n        return this.client.next();\n    }\n\n    first(): IPromise<any> {\n        return this.client.first();\n    }\n\n    last(): IPromise<any> {\n        return this.client.last();\n    }\n\n    page(p: number): IPromise<any> {\n        return this.client.page(p);\n    }\n\n    order(column: string, direction: \"ASC\" | \"DESC\"): IPromise<any> {\n        return this.client.order(column, direction);\n    }\n\n    limit(l: number): IPromise<any> {\n        return this.client.limit(l);\n    }\n\n    filter(q?: string) {\n        return this.client.filter(q);\n    }\n\n    $onInit() {\n        if (null != this.query && null == this.client) {\n            this.client = this.clientFactory.createClient(this.query);\n        } else if (null == this.query && null == this.client) {\n            throw new Error(\"Either a DFQuery or a DFClient object must be provided to Datafree.\");\n        }\n\n        this.client.subscribe(this.dataListener);\n    }\n\n    $postLink() {\n        if (this.autoload == true) {\n            this.client.send();\n        }\n    }\n\n    $onDestroy() {\n        this.client.unsubscribe(this.dataListener);\n    }\n}\n\nexport class DatafreePagerDirectiveController implements IController {\n    public datafree:DatafreeDirectiveController;\n    public numberLimit: number = 5;\n    public firstLabel: string = \"First\";\n    public lastLabel: string = \"Last\";\n    public prevLabel: string = \"Back\";\n    public nextLabel: string = \"Next\";\n    public showFirst = true;\n    public showPrev = true;\n    public showNext = true;\n    public showLast = true;\n\n    protected numbers: number[] = [];\n    protected currentPage: number = 1;\n    protected limit:number = 10;\n    protected maxPages:number = 1;\n    protected total:number = 0;\n\n    private dataChange:Function;\n\n    prev() {\n        if (this.currentPage > 1) {\n            this.datafree.prev();\n        }\n    }\n\n    next() {\n        if (this.currentPage < this.maxPages) {\n            this.datafree.next();\n        }\n    }\n\n    first() {\n        this.datafree.first();\n    }\n\n    last() {\n        this.datafree.last();\n    }\n\n    page(p: number) {\n        let page:number = p - 1;\n\n        if (page >= 0 && page < this.maxPages)\n        {\n            this.datafree.page(page);\n        }\n    }\n\n    skipBack() {\n        this.page(Math.max(1, this.currentPage - this.numberLimit));\n    }\n\n    skipForward() {\n        this.page(Math.min(this.maxPages, this.currentPage + this.numberLimit));\n    }\n\n    $onInit() {\n        this.dataChange = (function() {\n            this.currentPage = this.datafree.client.$query.$page + 1; // query.$page starts at 0, pager starts at 1\n            this.limit = this.datafree.client.$query.$limit;\n            this.total = this.datafree.client.$query.$total;\n            this.maxPages = Math.ceil(this.total / this.limit);\n\n            let median = Math.floor(this.numberLimit / 2);\n\n            this.numbers = [];\n\n            if (median > 0) {\n                let start = Math.max(1, Math.min(this.maxPages - this.numberLimit + 1, this.currentPage - median));\n                let max = Math.min(start + this.numberLimit, this.maxPages + 1);\n\n                for (let i = start; i < max; i++) {\n                    this.numbers.push(i);\n                }\n            }\n        }).bind(this);\n    }\n\n    $postLink() {\n        this.datafree.subscribe(this.dataChange);\n    }\n\n    $onDestroy() {\n        this.datafree.unsubscribe(this.dataChange);\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/controller.ts\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}